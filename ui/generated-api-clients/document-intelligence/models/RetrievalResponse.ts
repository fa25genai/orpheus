/* tslint:disable */
/* eslint-disable */
/**
 * Document Intelligence API
 * API for the Orpheus document intelligence orchestration. From the repository: \"The Orpheus System transforms static slides into interactive lecture videos with lifelike professor avatars, combining expressive narration, visual presence, and dynamic content to create engaging, personalized learning experiences.\" License: MIT (see repository).
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ImageObject } from './ImageObject';
import {
    ImageObjectFromJSON,
    ImageObjectFromJSONTyped,
    ImageObjectToJSON,
    ImageObjectToJSONTyped,
} from './ImageObject';

/**
 * 
 * @export
 * @interface RetrievalResponse
 */
export interface RetrievalResponse {
    /**
     * Array of text snippets.
     * @type {Array<string>}
     * @memberof RetrievalResponse
     */
    content: Array<string>;
    /**
     * Array of image objects.
     * @type {Array<ImageObject>}
     * @memberof RetrievalResponse
     */
    images: Array<ImageObject>;
}

/**
 * Check if a given object implements the RetrievalResponse interface.
 */
export function instanceOfRetrievalResponse(value: object): value is RetrievalResponse {
    if (!('content' in value) || value['content'] === undefined) return false;
    if (!('images' in value) || value['images'] === undefined) return false;
    return true;
}

export function RetrievalResponseFromJSON(json: any): RetrievalResponse {
    return RetrievalResponseFromJSONTyped(json, false);
}

export function RetrievalResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): RetrievalResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'content': json['content'],
        'images': ((json['images'] as Array<any>).map(ImageObjectFromJSON)),
    };
}

export function RetrievalResponseToJSON(json: any): RetrievalResponse {
    return RetrievalResponseToJSONTyped(json, false);
}

export function RetrievalResponseToJSONTyped(value?: RetrievalResponse | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'content': value['content'],
        'images': ((value['images'] as Array<any>).map(ImageObjectToJSON)),
    };
}

