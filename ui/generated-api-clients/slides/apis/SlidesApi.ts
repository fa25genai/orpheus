/* tslint:disable */
/* eslint-disable */
/**
 * Slide Generation Service API
 * API for the Orpheus slide generation. From the repository: \"The Orpheus System transforms static slides into interactive lecture videos with lifelike professor avatars, combining expressive narration, visual presence, and dynamic content to create engaging, personalized learning experiences.\" License: MIT (see repository). 
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  GenerationAcceptedResponse,
  GenerationStatusResponse,
  RequestSlideGenerationRequest,
} from '../models/index';
import {
    GenerationAcceptedResponseFromJSON,
    GenerationAcceptedResponseToJSON,
    GenerationStatusResponseFromJSON,
    GenerationStatusResponseToJSON,
    RequestSlideGenerationRequestFromJSON,
    RequestSlideGenerationRequestToJSON,
} from '../models/index';

export interface GetGenerationStatusRequest {
    promptId: string;
}

export interface RequestSlideGenerationOperationRequest {
    requestSlideGenerationRequest: RequestSlideGenerationRequest;
}

/**
 * 
 */
export class SlidesApi extends runtime.BaseAPI {

    /**
     * Get generation status for a previously-submitted request
     */
    async getGenerationStatusRaw(requestParameters: GetGenerationStatusRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<GenerationStatusResponse>> {
        if (requestParameters['promptId'] == null) {
            throw new runtime.RequiredError(
                'promptId',
                'Required parameter "promptId" was null or undefined when calling getGenerationStatus().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};


        let urlPath = `/v1/slides/{promptId}/status`;
        urlPath = urlPath.replace(`{${"promptId"}}`, encodeURIComponent(String(requestParameters['promptId'])));

        const response = await this.request({
            path: urlPath,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => GenerationStatusResponseFromJSON(jsonValue));
    }

    /**
     * Get generation status for a previously-submitted request
     */
    async getGenerationStatus(requestParameters: GetGenerationStatusRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<GenerationStatusResponse> {
        const response = await this.getGenerationStatusRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * Accepts a concept and supporting assets (images, graphs, tables, code listings, equations). The request returns immediately with a request_id and status (typically IN_PROGRESS). Final slide deck (PDF) is produced asynchronously; the client can poll the status endpoint and fetch the resulting deck when complete. 
     * Request generation of a slide deck (async — returns early)
     */
    async requestSlideGenerationRaw(requestParameters: RequestSlideGenerationOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<GenerationAcceptedResponse>> {
        if (requestParameters['requestSlideGenerationRequest'] == null) {
            throw new runtime.RequiredError(
                'requestSlideGenerationRequest',
                'Required parameter "requestSlideGenerationRequest" was null or undefined when calling requestSlideGeneration().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';


        let urlPath = `/v1/slides/generate`;

        const response = await this.request({
            path: urlPath,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: RequestSlideGenerationRequestToJSON(requestParameters['requestSlideGenerationRequest']),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => GenerationAcceptedResponseFromJSON(jsonValue));
    }

    /**
     * Accepts a concept and supporting assets (images, graphs, tables, code listings, equations). The request returns immediately with a request_id and status (typically IN_PROGRESS). Final slide deck (PDF) is produced asynchronously; the client can poll the status endpoint and fetch the resulting deck when complete. 
     * Request generation of a slide deck (async — returns early)
     */
    async requestSlideGeneration(requestParameters: RequestSlideGenerationOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<GenerationAcceptedResponse> {
        const response = await this.requestSlideGenerationRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
