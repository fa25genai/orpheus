/* tslint:disable */
/* eslint-disable */
/**
 * Avatar Generation Service API
 * API for the Orpheus video generation. From the repository: \"The Orpheus System transforms static slides into interactive lecture videos with lifelike professor avatars, combining expressive narration, visual presence, and dynamic content to create engaging, personalized learning experiences.\" 
 *
 * The version of the OpenAPI document: 0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface AvatarImageResponse
 */
export interface AvatarImageResponse {
    /**
     * 
     * @type {string}
     * @memberof AvatarImageResponse
     */
    id?: string;
    /**
     * 
     * @type {string}
     * @memberof AvatarImageResponse
     */
    avatarId?: string;
    /**
     * 
     * @type {string}
     * @memberof AvatarImageResponse
     */
    filePath?: string;
    /**
     * 
     * @type {string}
     * @memberof AvatarImageResponse
     */
    mimeType?: string;
    /**
     * 
     * @type {number}
     * @memberof AvatarImageResponse
     */
    sizeBytes?: number;
    /**
     * 
     * @type {Date}
     * @memberof AvatarImageResponse
     */
    createdAt?: Date;
}

/**
 * Check if a given object implements the AvatarImageResponse interface.
 */
export function instanceOfAvatarImageResponse(value: object): value is AvatarImageResponse {
    return true;
}

export function AvatarImageResponseFromJSON(json: any): AvatarImageResponse {
    return AvatarImageResponseFromJSONTyped(json, false);
}

export function AvatarImageResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): AvatarImageResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'avatarId': json['avatarId'] == null ? undefined : json['avatarId'],
        'filePath': json['filePath'] == null ? undefined : json['filePath'],
        'mimeType': json['mimeType'] == null ? undefined : json['mimeType'],
        'sizeBytes': json['sizeBytes'] == null ? undefined : json['sizeBytes'],
        'createdAt': json['createdAt'] == null ? undefined : (new Date(json['createdAt'])),
    };
}

export function AvatarImageResponseToJSON(json: any): AvatarImageResponse {
    return AvatarImageResponseToJSONTyped(json, false);
}

export function AvatarImageResponseToJSONTyped(value?: AvatarImageResponse | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'avatarId': value['avatarId'],
        'filePath': value['filePath'],
        'mimeType': value['mimeType'],
        'sizeBytes': value['sizeBytes'],
        'createdAt': value['createdAt'] == null ? undefined : ((value['createdAt']).toISOString()),
    };
}

