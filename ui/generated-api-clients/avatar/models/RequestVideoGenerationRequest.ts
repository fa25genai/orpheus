/* tslint:disable */
/* eslint-disable */
/**
 * Service Video-Generation APIs
 * API for the Orpheus video generation. From the repository: \"The Orpheus System transforms static slides into interactive lecture videos with lifelike professor avatars, combining expressive narration, visual presence, and dynamic content to create engaging, personalized learning experiences.\" 
 *
 * The version of the OpenAPI document: 0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { UserProfile } from './UserProfile';
import {
    UserProfileFromJSON,
    UserProfileFromJSONTyped,
    UserProfileToJSON,
    UserProfileToJSONTyped,
} from './UserProfile';

/**
 * 
 * @export
 * @interface RequestVideoGenerationRequest
 */
export interface RequestVideoGenerationRequest {
    /**
     * Per-slide text blocks in order.
     * @type {Array<string>}
     * @memberof RequestVideoGenerationRequest
     */
    slideMessages: Array<string>;
    /**
     * Unique identifier of the lecture to which the slides will belong.
     * 
     * @type {string}
     * @memberof RequestVideoGenerationRequest
     */
    promptId: string;
    /**
     * Course ID used to identify the correct professor/avatar resources.
     * @type {string}
     * @memberof RequestVideoGenerationRequest
     */
    courseId: string;
    /**
     * 
     * @type {UserProfile}
     * @memberof RequestVideoGenerationRequest
     */
    userProfile: UserProfile;
}

/**
 * Check if a given object implements the RequestVideoGenerationRequest interface.
 */
export function instanceOfRequestVideoGenerationRequest(value: object): value is RequestVideoGenerationRequest {
    if (!('slideMessages' in value) || value['slideMessages'] === undefined) return false;
    if (!('promptId' in value) || value['promptId'] === undefined) return false;
    if (!('courseId' in value) || value['courseId'] === undefined) return false;
    if (!('userProfile' in value) || value['userProfile'] === undefined) return false;
    return true;
}

export function RequestVideoGenerationRequestFromJSON(json: any): RequestVideoGenerationRequest {
    return RequestVideoGenerationRequestFromJSONTyped(json, false);
}

export function RequestVideoGenerationRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): RequestVideoGenerationRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'slideMessages': json['slideMessages'],
        'promptId': json['promptId'],
        'courseId': json['courseId'],
        'userProfile': UserProfileFromJSON(json['userProfile']),
    };
}

export function RequestVideoGenerationRequestToJSON(json: any): RequestVideoGenerationRequest {
    return RequestVideoGenerationRequestToJSONTyped(json, false);
}

export function RequestVideoGenerationRequestToJSONTyped(value?: RequestVideoGenerationRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'slideMessages': value['slideMessages'],
        'promptId': value['promptId'],
        'courseId': value['courseId'],
        'userProfile': UserProfileToJSON(value['userProfile']),
    };
}

