/* tslint:disable */
/* eslint-disable */
/**
 * Avatar Generation Service API
 * API for the Orpheus video generation. From the repository: \"The Orpheus System transforms static slides into interactive lecture videos with lifelike professor avatars, combining expressive narration, visual presence, and dynamic content to create engaging, personalized learning experiences.\" 
 *
 * The version of the OpenAPI document: 0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { UserProfilePreferences } from './UserProfilePreferences';
import {
    UserProfilePreferencesFromJSON,
    UserProfilePreferencesFromJSONTyped,
    UserProfilePreferencesToJSON,
    UserProfilePreferencesToJSONTyped,
} from './UserProfilePreferences';

/**
 * Information about the user and their preferences.
 * @export
 * @interface UserProfile
 */
export interface UserProfile {
    /**
     * Unique identifier of the user.
     * @type {string}
     * @memberof UserProfile
     */
    id: string;
    /**
     * User's role.
     * @type {string}
     * @memberof UserProfile
     */
    role: UserProfileRoleEnum;
    /**
     * Primary language.
     * @type {string}
     * @memberof UserProfile
     */
    language: UserProfileLanguageEnum;
    /**
     * 
     * @type {UserProfilePreferences}
     * @memberof UserProfile
     */
    preferences?: UserProfilePreferences;
    /**
     * Course IDs the user is enrolled in.
     * @type {Array<string>}
     * @memberof UserProfile
     */
    enrolledCourses?: Array<string>;
}


/**
 * @export
 */
export const UserProfileRoleEnum = {
    Student: 'student',
    Instructor: 'instructor'
} as const;
export type UserProfileRoleEnum = typeof UserProfileRoleEnum[keyof typeof UserProfileRoleEnum];

/**
 * @export
 */
export const UserProfileLanguageEnum = {
    German: 'german',
    English: 'english'
} as const;
export type UserProfileLanguageEnum = typeof UserProfileLanguageEnum[keyof typeof UserProfileLanguageEnum];


/**
 * Check if a given object implements the UserProfile interface.
 */
export function instanceOfUserProfile(value: object): value is UserProfile {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('role' in value) || value['role'] === undefined) return false;
    if (!('language' in value) || value['language'] === undefined) return false;
    return true;
}

export function UserProfileFromJSON(json: any): UserProfile {
    return UserProfileFromJSONTyped(json, false);
}

export function UserProfileFromJSONTyped(json: any, ignoreDiscriminator: boolean): UserProfile {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'role': json['role'],
        'language': json['language'],
        'preferences': json['preferences'] == null ? undefined : UserProfilePreferencesFromJSON(json['preferences']),
        'enrolledCourses': json['enrolledCourses'] == null ? undefined : json['enrolledCourses'],
    };
}

export function UserProfileToJSON(json: any): UserProfile {
    return UserProfileToJSONTyped(json, false);
}

export function UserProfileToJSONTyped(value?: UserProfile | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'role': value['role'],
        'language': value['language'],
        'preferences': UserProfilePreferencesToJSON(value['preferences']),
        'enrolledCourses': value['enrolledCourses'],
    };
}

