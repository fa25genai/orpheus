/* tslint:disable */
/* eslint-disable */
/**
 * Avatar Generation Service API
 * API for the Orpheus video generation. From the repository: \"The Orpheus System transforms static slides into interactive lecture videos with lifelike professor avatars, combining expressive narration, visual presence, and dynamic content to create engaging, personalized learning experiences.\" 
 *
 * The version of the OpenAPI document: 0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { AvatarCreatedResponseImage } from './AvatarCreatedResponseImage';
import {
    AvatarCreatedResponseImageFromJSON,
    AvatarCreatedResponseImageFromJSONTyped,
    AvatarCreatedResponseImageToJSON,
    AvatarCreatedResponseImageToJSONTyped,
} from './AvatarCreatedResponseImage';

/**
 * 
 * @export
 * @interface AvatarCreatedResponse
 */
export interface AvatarCreatedResponse {
    /**
     * 
     * @type {string}
     * @memberof AvatarCreatedResponse
     */
    avatarId?: string;
    /**
     * 
     * @type {AvatarCreatedResponseImage}
     * @memberof AvatarCreatedResponse
     */
    image?: AvatarCreatedResponseImage;
}

/**
 * Check if a given object implements the AvatarCreatedResponse interface.
 */
export function instanceOfAvatarCreatedResponse(value: object): value is AvatarCreatedResponse {
    return true;
}

export function AvatarCreatedResponseFromJSON(json: any): AvatarCreatedResponse {
    return AvatarCreatedResponseFromJSONTyped(json, false);
}

export function AvatarCreatedResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): AvatarCreatedResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'avatarId': json['avatarId'] == null ? undefined : json['avatarId'],
        'image': json['image'] == null ? undefined : AvatarCreatedResponseImageFromJSON(json['image']),
    };
}

export function AvatarCreatedResponseToJSON(json: any): AvatarCreatedResponse {
    return AvatarCreatedResponseToJSONTyped(json, false);
}

export function AvatarCreatedResponseToJSONTyped(value?: AvatarCreatedResponse | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'avatarId': value['avatarId'],
        'image': AvatarCreatedResponseImageToJSON(value['image']),
    };
}

