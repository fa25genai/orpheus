[tool.poetry]
name = "service-core"
version = "0.1.0"
description = "Orpheus Core AI Services"
authors = [
    "Rifaath Ameen",
    "Apoorva M Vaidya",
    "Eslam Nasrallah",
    "Lukas BÃ¤urle",
    "Florian Glombik",
]
readme = "README.md"
packages = [{ include = "service_core", from = "src" }]

[tool.poetry.dependencies]
python = "^3.13"
fastapi = "0.117.1"
langchain = "1.0.0a6"
langchain-community = ">=0.3.29,<1.0.0"
uvicorn = { extras = ["standard"], version = ">=0.36.0,<0.37.0" }
openapi-generator = ">=1.0.6,<2.0.0"
boto3 = ">=1.40.39,<2.0.0"
httpx = "^0.27.0"

[tool.poetry.group.dev.dependencies]
ruff = "0.13.1"
mypy = "1.18.1"
datamodel-code-generator = ">=0.33.0,<0.34.0"

[build-system]
requires = ["poetry-core>=2.2.0,<3.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
line-length = 300
target-version = "py313"
exclude = [
    "src/service_core/apis",
    "src/service_core/models",
    "src/service_core/services/fetch_mock_data.py",
]

[tool.ruff.lint]
select = ["E", "F", "I"]

[tool.ruff.lint.per-file-ignores]
"src/service_core/services/helpers/handle_retrieved.py" = ["E501"]

[tool.mypy]
python_version = "3.13"
strict = true
warn_unused_ignores = true
warn_redundant_casts = true
no_implicit_optional = true
mypy_path = "src"
namespace_packages = true
explicit_package_bases = true
exclude = "(src/service_core/apis|src/service_core/models|src/service_core/services/fetch_mock_data.py)"
