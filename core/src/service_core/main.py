# coding: utf-8

"""
    Orpheus CoreAI-Service API

    API for the Orpheus core orchestration. From the repository: \"The Orpheus System transforms static slides into interactive lecture videos with lifelike professor avatars, combining expressive narration, visual presence, and dynamic content to create engaging, personalized learning experiences.\" License: MIT (see repository). 

    The version of the OpenAPI document: 0.1.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501

from contextlib import asynccontextmanager
from concurrent.futures import ProcessPoolExecutor

from fastapi import FastAPI

from service_core.apis.core_api import router as CoreApiRouter

@asynccontextmanager
async def lifespan(app: FastAPI):
    # On startup, create the executor and store it in the app's state
    print("Starting up and creating CoreProcessExecutor...")
    executor = ProcessPoolExecutor()
    app.state.executor = executor
    yield
    # On shutdown, gracefully shut down the executor
    print("Shutting down the CoreProcessExecutor...")
    app.state.executor.shutdown(wait=True)

app = FastAPI(
    title="Orpheus CoreAI-Service API",
    description="API for the Orpheus core orchestration. From the repository: \&quot;The Orpheus System transforms static slides into interactive lecture videos with lifelike professor avatars, combining expressive narration, visual presence, and dynamic content to create engaging, personalized learning experiences.\&quot; License: MIT (see repository). ",
    version="0.1.0",
    lifespan=lifespan
)

app.include_router(CoreApiRouter)
