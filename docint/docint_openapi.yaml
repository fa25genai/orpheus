openapi: 3.1.0
info:
  title: Document Intelligence API
  description: |-
    API for the Orpheus document intelligence orchestration.
    From the repository: "The Orpheus System transforms static slides into interactive lecture videos with lifelike professor avatars, combining expressive narration, visual presence, and dynamic content to create engaging, personalized learning experiences."
    License: MIT (see repository).
  termsOfService: "https://github.com/fa25genai/orpheus"
  contact:
    name: "Orpheus Project"
    url: "https://github.com/fa25genai/orpheus/issues/new"
  license:
    name: MIT
    url: "https://opensource.org/licenses/MIT"

servers:
  - url: "http://localhost:30606"
    description: "Local development (random port chosen: 30606)"
  - url: "http://orpheus-service-docint:8080"
    description: "DNS service name for in-cluster service"

tags:
  - name: docint
    description: "Endpoints for document storage and retrieval."
  
paths:
  /v1/docint/retrieval:
    get:
      tags:
        - docint
      summary: provides texts and images with the highest confident score
      operationId: retrievesDataForGeneration
      parameters:
        - name: courseId
          in: query
          required: true
          schema:
            type: string
          description: "The ID of the course to retrieve content from."
        - name: query
          in: query
          required: true
          schema:
            type: string
          describing: "The user's query or prompt."
    responses:
          "200":
            description: "A successful response containing relevant content and images."
            content:
              application/json:
                schema:
                  $ref: "#/components/schemas/RetrievalResponse"
          "400":
            description: "Bad Request - The request is missing a required parameter."
          "404":
            description: "Not Found - The courseId was not found."

components:
  schemas:
    RetrievalResponse:
      type: object
      properties:
        content:
          type: array
          items:
            type: string
          description: "An array of text snippets."
        images:
          type: array
          items:
            $ref: "#/components/schemas/ImageObject"
          description: "An array of image objects."
    ImageObject:
      type: object
      properties:
        image/*:
          schema:
            type: string
            format: binary
          description: "Image"
        description:
          type: string
          description: "A short description of the image."
        textualDescription:
          type: string
          description: "A more detailed textual description of the image."