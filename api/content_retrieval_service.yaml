openapi: 3.1.0
info:
  title: Document Intelligence API
  version: "0.1.0"
  description: |-
    API for the Orpheus document intelligence orchestration.
    From the repository: "The Orpheus System transforms static slides into interactive lecture videos with lifelike professor avatars, combining expressive narration, visual presence, and dynamic content to create engaging, personalized learning experiences."
    License: MIT (see repository).
  termsOfService: "https://github.com/fa25genai/orpheus"
  contact:
    name: "Orpheus Project"
    url: "https://github.com/fa25genai/orpheus/issues/new"
  license:
    name: MIT
    url: "https://opensource.org/licenses/MIT"

servers:
  - url: "http://localhost:30606"
    description: "Local development (random port chosen: 30606)"
  - url: "http://orpheus-service-docint:8080"
    description: "DNS service name for in-cluster service"

tags:
  - name: docint
    description: "Endpoints for document storage and retrieval."

paths:

  /v1/retrieval/{courseId}:
    get:
      tags: 
        - docint
      summary: Provides relevant textual content and images
      operationId: retrievesDataForGeneration
      parameters:
        - $ref: "#/components/parameters/CourseId"
        - name: promptQuery
          in: query
          required: true
          schema:
            type: string
          description: "The user's query or prompt."
      responses:
        "200":
          description: "Content and images."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RetrievalResponse"
        "400": 
          $ref: "#/components/responses/BadRequest"
        "404": 
          $ref: "#/components/responses/NotFound"

components:
  parameters:
    CourseId:
      name: courseId
      in: path
      required: true
      schema: 
        type: string
      description: "The course ID."
    DocumentId:
      name: documentId
      in: path
      required: true
      schema:
        type: string
      description: "The document ID."

  responses:
    BadRequest:
      description: Bad Request – missing file or parameters.
    NotFound:
      description: Not Found – resource not found.
    PayloadTooLarge:
      description: Payload Too Large.
    UnsupportedMediaType:
      description: Unsupported Media Type (only PDFs accepted).

  schemas:
    UploadResponse:
      type: object
      required: [documentId]
      properties:
        documentId:
          type: string
          description: The ID of the stored document.

    RetrievalResponse:
      type: object
      required: [content, images]
      properties:
        content:
          type: array
          items:
            type: string
          description: "Array of text snippets."
        images:
          type: array
          items: 
            $ref: "#/components/schemas/ImageObject"
          description: "Array of image objects."

    ImageObject:
      type: object
      properties:
        image:
          type: string
          contentMediaType: image/*
          contentEncoding: base64
          description: "Base64-encoded image."
        description:
          type: string
          description: "Short description of the image."