openapi: 3.0.0
info:
  title: Answer Generation Service API
  version: "0.1.0"
  description: |
    API for the Orpheus core orchestration.
    From the repository: "The Orpheus System transforms static slides into interactive prompt videos with lifelike professor avatars, combining expressive narration, visual presence, and dynamic content to create engaging, personalized learning experiences."
    License: MIT (see repository).
  termsOfService: "https://github.com/fa25genai/orpheus"
  contact:
    name: "Orpheus Project"
    url: "https://github.com/fa25genai/orpheus/issues/new"
  license:
    name: MIT
    url: "https://opensource.org/licenses/MIT"

servers:
  - url: "http://localhost:8000"
    description: "Local development"
  - url: "http://orpheus-service-core:8080"
    description: "DNS service name for in-cluster service"

tags:
  - name: core
    description: "Endpoints for core AI"

paths:
  /core/prompt:
    post:
      tags:
        - core
      summary: "Submit a prompt to generate a lecture"
      description: "Accepts a user prompt and initiates an asynchronous job to generate lecture content. Returns a unique prompt ID to track the job."
      operationId: "createLectureFromPrompt"
      requestBody:
        description: "The user prompt to generate content from."
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PromptRequest'
      responses:
        '202':
          description: "Accepted. The generation job has been successfully created."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PromptResponse'
        '400':
          description: "Bad Request. The request body is invalid."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

components:
  schemas:
    # Component provided in the prompt
    UserProfile:
      type: "object"
      properties:
        id:
          type: "string"
          format: "uuid"
          description: "Unique identifier for the user."
          example: "a1b2c3d4-e5f6-7890-1234-567890abcdef"
        role:
          type: "string"
          enum: ["student", "instructor"]
        language:
          type: "string"
          enum: ["german", "english"]
        preferences:
          type: "object"
          properties:
            answerLength:
              type: "string"
              enum: ["short", "medium", "long"]
            languageLevel:
              type: "string"
              enum: ["basic", "intermediate", "advanced"]
            expertiseLevel:
              type: "string"
              enum: ["beginner", "intermediate", "advanced", "expert"]
            includePictures:
              type: "string"
              enum: ["none", "few", "many"]
        enrolledCourses:
          type: "array"
          items:
            type: "string"
            example: "courseId1"

    # Schemas for Path Operations
    PromptRequest:
      type: "object"
      properties:
        prompt:
          type: "string"
          description: "The user's educational prompt."
          example: "Explain the theory of relativity in simple terms."
        courseId:
          type: "string"
          format: "string"
          description: "The identifier of the course for which the prompt is being generated."
          example: "IN001"
      required:
        - "prompt"
        - "courseId"

    PromptResponse:
      type: "object"
      properties:
        promptId:
          type: "string"
          format: "uuid"
          description: "The unique ID assigned to the generation job."
          example: "f47ac10b-58cc-4372-a567-0e02b2c3d479"
      required:
        - "promptId"

    # Standard Error Schema
    Error:
      type: "object"
      properties:
        code:
          type: "integer"
          description: "The HTTP status code."
          example: 404
        message:
          type: "string"
          description: "A human-readable error message."
          example: "Resource not found"
      required:
        - "code"
        - "message"

externalDocs:
  description: "Project repository and README"
  url: "https://github.com/fa25genai/orpheus"